apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "relay.fullname" . }}
  labels:
    {{- include "relay.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      {{- include "relay.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "relay.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "relay.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--repo"
            - "{{ .Values.app.repositories }}"
            - "--clientId"
            - "{{ .Values.app.clientId }}"
            - "--server"
            - "{{ .Values.grpcServer.host }}"
            - "--port"
            - "{{ .Values.grpcServer.port }}"
            - "--streamWindow"
            - "{{ .Values.grpcServer.streamWindow }}"
            {{ if and .Values.grpcServer.insecure }}
            - "--insecure"
            {{ end }}
            {{ if and .Values.relay.enabled }}
            - "--relayEnabled=true"
            - "--relayHost"
            - "{{ .Values.relay.host }}"
            - "--relayPath"
            - "{{ .Values.relay.path }}"
            - "--relayHealthCheckPath"
            - "{{ .Values.relay.healthCheckPath }}"
            - "--relayPort"
            - "{{ .Values.relay.port }}"
            - "--relayProtocol"
            - "{{ .Values.relay.protocol }}"
            - "--relayInsecure"
            - "{{ .Values.relay.insecure }}"
            {{ end }}
            {{ if and .Values.security.useGeneratedCert .Values.security.caOnly }}
            - "--caFileLocation"
            - "/etc/tls/ca.crt"
            {{ else if and .Values.security.useGeneratedCert (not .Values.security.caOnly) }}
            - "--caFileLocation"
            - "/etc/tls/ca.crt"
            - "--certFileLocation"
            - "/etc/tls/tls.crt"
            - "--certKeyFileLocation"
            - "/etc/tls/tls.key"
            {{ end }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
          startupProbe:
            httpGet:
              path: /health
              port: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{ if .Values.security.useGeneratedCert }}
          volumeMounts:
            - mountPath: "/etc/tls"
              name: tls
              readOnly: true
          {{ end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.security.useGeneratedCert }}
      volumes:
        - name: tls
          secret:
            secretName: {{ include "tls.secretName" . }}
      {{ end }}