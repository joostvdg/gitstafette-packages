#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")
---
apiVersion: v1
kind: Service
metadata:
  name:  #@ data.values.name
  labels:
    app.kubernetes.io/name: #@ data.values.name
  #! Only needed when using normal Ingress
  #@ if data.values.ingress.enabled:
  annotations:
    projectcontour.io/upstream-protocol.h2c: #@ '"' + str(data.values.app.grpcPort) + '"'
  #@ end
spec:
  type: #@ data.values.service.type
  ports:
    - name: http
      port: #@ data.values.service.port
      targetPort: http
      protocol: TCP
    - name: grpc
      port: #@ data.values.app.grpcPort
      targetPort: #@ data.values.app.grpcPort
      protocol: TCP
  selector:
    app.kubernetes.io/name: #@ data.values.name

---

#@ if data.values.app.grpcPort != data.values.app.grpcHealthPort:
#@overlay/match by=overlay.and_op(overlay.subset({"kind": "Service"}), overlay.subset({"metadata": {"name": data.values.name}}))
---
spec:
  ports:
    #@overlay/append
    - name: grpc-healthcheck
      port: #@ data.values.app.grpcHealthPort
      targetPort: #@ data.values.app.grpcHealthPort
      protocol: TCP
  #@ end
---