# Default values for server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: "default"

replicaCount: 1

image:
  repository: ghcr.io/joostvdg/gitstafette/server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.0-e0a2c7d"

istio:
  enabled: false

fqdn: gsf-server.example.com
fqdnWeb: gsf-server-web.example.com

app:
  repositories: ""
  grpcPort: 50051
  grpcHealthPort: 50052
  httpPort: 8080
  httpPrefix: "/"

security:
  caOnly: false
  useGeneratedCert: false
  certmanager:
    generateCert: false
    issuer:
      name: ""
      kind: ""

# --hostname 127.0.0.1 info-registration-loop --info-host 127.0.0.1 --info-port 50056 --info-protocol http
discovery:
  enabled: false
  image:
    repository: ghcr.io/joostvdg/gitstafette/discovery
    pullPolicy: IfNotPresent
    tag: "0.5.0-alpine"  
  hostname: "gsf-discovery"
  port: 50051
  protocol: http
  info:
    hostname: 127.0.0.1
    port: 50051
    protocol: http
  resources:
    requests:
      cpu: 250m
      memory: 16Mi
    limits:
      memory: 32Mi
  env:
    - name: OTEL_SERVICE_NAME
      value: "GSF-Discovery-1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels:
  app.kubernetes.io/component: "gsf-server"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}



httpproxy:
  enabled: false
  ingressClassName: contour
  fqdn: gitstafette.home.lab
  annotations: {}
  grpc:
    prefix: /
    protocol: h2c
  http:
    prefix: /api
    replacement: /
